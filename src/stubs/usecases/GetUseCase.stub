<?php

namespace {{usecaseNamespace}};

use Illuminate\Http\Request;
use {{entityNamespace}}\{{modelName}}Entity;
use {{repositoryInterfaceNamespace}}\{{modelName}}RepositoryInterface;

class Get{{modelName}}UseCase
{
    private {{modelName}}RepositoryInterface ${{modelNameLowerCase}}Repository;

    /**
     * @param Injections
     */
    public function __construct(
        {{modelName}}RepositoryInterface ${{modelNameLowerCase}}Repostiroy,
    ) {
        $this->{{modelNameLowerCase}}Repository = ${{modelNameLowerCase}}Repostiroy;
    }

    /** 
     * @param Request $request
     * @return {{modelName}}Entity | {{modelName}}Entity[]
     */
    public function execute(Request $request)
    {
        if (isset($request->id) && !isset($request->filter)) {
            ${{modelNameLowerCase}} = $this->{{modelNameLowerCase}}Repository->fetchById($request->id);
            return ${{modelNameLowerCase}}->dehydrate();
        }
        return $this->{{modelNameLowerCase}}Repository->fetchBy($request->filter ?? []);
    }
}
